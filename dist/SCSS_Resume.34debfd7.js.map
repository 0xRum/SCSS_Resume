{"mappings":"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","sources":["<anon>","src/scripts/main.ts"],"sourcesContent":["var $1ccc8d3c866b7484$exports = {};\nclass $1ccc8d3c866b7484$var$PortfolioApp {\n    constructor(){\n        this.isDarkMode = false;\n        this.isMobileMenuOpen = false;\n        this.projects = [\n            {\n                name: \"Dungeon Dive\",\n                description: \"This is a simple dungeon crawler game made with C programming language where the player can navigate through a randomly generated dungeon after entering their username and dungeon size.\",\n                githubUrl: \"https://github.com/0xRum/dungeon-dive\"\n            },\n            {\n                name: \"Taskii\",\n                description: \"A modern and efficient task management application built with Flutter. Taskii helps you organize, prioritize, and track your tasks seamlessly, whether you're managing personal to-dos or team projects.\",\n                githubUrl: \"https://github.com/vasu-patel-123/Team-HamburgerHelpers-final-Project/tree/main/taskii\"\n            }\n        ];\n        this.initializeThemeToggle();\n        this.initializeSmoothScroll();\n        if (window.location.pathname.endsWith(\"index.html\") || window.location.pathname.endsWith(\"/\")) this.loadProjects();\n        this.initializeIntersectionObserver();\n        this.initializeMobileMenu();\n    }\n    initializeThemeToggle() {\n        const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        const storedTheme = localStorage.getItem(\"theme\");\n        if (storedTheme) document.documentElement.setAttribute(\"data-theme\", storedTheme);\n        else if (prefersDark) {\n            document.documentElement.setAttribute(\"data-theme\", \"dark\");\n            localStorage.setItem(\"theme\", \"dark\");\n        }\n        const toggleTheme = ()=>{\n            const currentTheme = document.documentElement.getAttribute(\"data-theme\");\n            const newTheme = currentTheme === \"dark\" ? \"light\" : \"dark\";\n            document.documentElement.setAttribute(\"data-theme\", newTheme);\n            localStorage.setItem(\"theme\", newTheme);\n        };\n        // Add event listeners for theme toggle buttons\n        document.querySelector(\".theme-toggle\")?.addEventListener(\"click\", toggleTheme);\n        document.querySelector(\".theme-toggle-mobile\")?.addEventListener(\"click\", toggleTheme);\n    }\n    initializeSmoothScroll() {\n        document.querySelectorAll('a[href^=\"#\"]').forEach((anchor)=>{\n            anchor.addEventListener(\"click\", (e)=>{\n                e.preventDefault();\n                const target = document.querySelector(e.target.getAttribute(\"href\") || \"\");\n                target?.scrollIntoView({\n                    behavior: \"smooth\"\n                });\n            });\n        });\n    }\n    loadProjects() {\n        const projectsGrid = document.querySelector(\".projects-grid\");\n        if (!projectsGrid) return;\n        this.projects.forEach((project)=>{\n            const projectCard = this.createProjectCard(project);\n            projectsGrid.appendChild(projectCard);\n        });\n    }\n    createProjectCard(project) {\n        const card = document.createElement(\"div\");\n        card.className = \"project-card\";\n        card.innerHTML = `\n      <div class=\"card-header\">\n        <h3>${project.name}</h3>\n      </div>\n      <p>${project.description}</p>\n      <a href=\"${project.githubUrl}\" target=\"_blank\" rel=\"noopener noreferrer\">\n        View on GitHub\n        <i class=\"fab fa-github\"></i>\n      </a>\n    `;\n        return card;\n    }\n    initializeIntersectionObserver() {\n        const observer = new IntersectionObserver((entries)=>{\n            entries.forEach((entry)=>{\n                if (entry.isIntersecting) entry.target.classList.add(\"visible\");\n            });\n        }, {\n            threshold: 0.1\n        });\n        document.querySelectorAll(\"section\").forEach((section)=>{\n            observer.observe(section);\n        });\n    }\n    initializeMobileMenu() {\n        const mobileMenu = document.querySelector(\".mobile-menu\");\n        const menuToggle = document.querySelector(\".menu-toggle\");\n        const closeMenu = document.querySelector(\".close-menu\");\n        const mobileMenuLinks = document.querySelectorAll(\".mobile-nav a\");\n        if (menuToggle && closeMenu && mobileMenu) {\n            menuToggle?.addEventListener(\"click\", ()=>{\n                this.isMobileMenuOpen = true;\n                mobileMenu.classList.add(\"active\");\n                menuToggle.style.display = \"none\";\n                document.body.style.overflow = \"hidden\";\n            });\n            closeMenu?.addEventListener(\"click\", ()=>{\n                this.isMobileMenuOpen = false;\n                mobileMenu.classList.remove(\"active\");\n                menuToggle.style.display = \"block\";\n                document.body.style.overflow = \"\";\n            });\n            mobileMenuLinks.forEach((link)=>{\n                link.addEventListener(\"click\", ()=>{\n                    this.isMobileMenuOpen = false;\n                    mobileMenu.classList.remove(\"active\");\n                    menuToggle.style.display = \"block\";\n                    document.body.style.overflow = \"\";\n                });\n            });\n        }\n    }\n}\n// Initialize the app when the DOM is loaded\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    new $1ccc8d3c866b7484$var$PortfolioApp();\n});\n\n\n//# sourceMappingURL=SCSS_Resume.34debfd7.js.map\n","interface Project {\n  name: string;\n  description: string;\n  githubUrl: string;\n}\n\nclass PortfolioApp {\n  private isDarkMode: boolean = false;\n  private isMobileMenuOpen: boolean = false;\n  private projects: Project[] = [\n    {\n      name: \"Dungeon Dive\",\n      description:\n        \"This is a simple dungeon crawler game made with C programming language where the player can navigate through a randomly generated dungeon after entering their username and dungeon size.\",\n      githubUrl: \"https://github.com/0xRum/dungeon-dive\",\n    },\n    {\n      name: \"Taskii\",\n      description:\n        \"A modern and efficient task management application built with Flutter. Taskii helps you organize, prioritize, and track your tasks seamlessly, whether you're managing personal to-dos or team projects.\",\n      githubUrl:\n        \"https://github.com/vasu-patel-123/Team-HamburgerHelpers-final-Project/tree/main/taskii\",\n    },\n  ];\n\n  constructor() {\n    this.initializeThemeToggle();\n    this.initializeSmoothScroll();\n    if (\n      window.location.pathname.endsWith(\"index.html\") ||\n      window.location.pathname.endsWith(\"/\")\n    ) {\n      this.loadProjects();\n    }\n    this.initializeIntersectionObserver();\n    this.initializeMobileMenu();\n  }\n\n  private initializeThemeToggle(): void {\n    const prefersDark = window.matchMedia(\n      \"(prefers-color-scheme: dark)\"\n    ).matches;\n    const storedTheme = localStorage.getItem(\"theme\");\n\n    if (storedTheme) {\n      document.documentElement.setAttribute(\"data-theme\", storedTheme);\n    } else if (prefersDark) {\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n\n    const toggleTheme = () => {\n      const currentTheme = document.documentElement.getAttribute(\"data-theme\");\n      const newTheme = currentTheme === \"dark\" ? \"light\" : \"dark\";\n\n      document.documentElement.setAttribute(\"data-theme\", newTheme);\n      localStorage.setItem(\"theme\", newTheme);\n    };\n\n    // Add event listeners for theme toggle buttons\n    document\n      .querySelector(\".theme-toggle\")\n      ?.addEventListener(\"click\", toggleTheme);\n    document\n      .querySelector(\".theme-toggle-mobile\")\n      ?.addEventListener(\"click\", toggleTheme);\n  }\n\n  private initializeSmoothScroll(): void {\n    document.querySelectorAll('a[href^=\"#\"]').forEach((anchor) => {\n      anchor.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const target = document.querySelector(\n          (e.target as HTMLAnchorElement).getAttribute(\"href\") || \"\"\n        );\n        target?.scrollIntoView({\n          behavior: \"smooth\",\n        });\n      });\n    });\n  }\n\n  private loadProjects(): void {\n    const projectsGrid = document.querySelector(\".projects-grid\");\n    if (!projectsGrid) return;\n\n    this.projects.forEach((project) => {\n      const projectCard = this.createProjectCard(project);\n      projectsGrid.appendChild(projectCard);\n    });\n  }\n\n  private createProjectCard(project: Project): HTMLElement {\n    const card = document.createElement(\"div\");\n    card.className = \"project-card\";\n\n    card.innerHTML = `\n      <div class=\"card-header\">\n        <h3>${project.name}</h3>\n      </div>\n      <p>${project.description}</p>\n      <a href=\"${project.githubUrl}\" target=\"_blank\" rel=\"noopener noreferrer\">\n        View on GitHub\n        <i class=\"fab fa-github\"></i>\n      </a>\n    `;\n\n    return card;\n  }\n\n  private initializeIntersectionObserver(): void {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add(\"visible\");\n          }\n        });\n      },\n      {\n        threshold: 0.1,\n      }\n    );\n\n    document.querySelectorAll(\"section\").forEach((section) => {\n      observer.observe(section);\n    });\n  }\n\n  private initializeMobileMenu(): void {\n    const mobileMenu = document.querySelector(\".mobile-menu\");\n    const menuToggle = document.querySelector(\n      \".menu-toggle\"\n    ) as HTMLButtonElement;\n    const closeMenu = document.querySelector(\".close-menu\");\n    const mobileMenuLinks = document.querySelectorAll(\".mobile-nav a\");\n\n    if (menuToggle && closeMenu && mobileMenu) {\n      menuToggle?.addEventListener(\"click\", () => {\n        this.isMobileMenuOpen = true;\n        mobileMenu.classList.add(\"active\");\n        menuToggle.style.display = \"none\";\n        document.body.style.overflow = \"hidden\";\n      });\n\n      closeMenu?.addEventListener(\"click\", () => {\n        this.isMobileMenuOpen = false;\n        mobileMenu.classList.remove(\"active\");\n        menuToggle.style.display = \"block\";\n        document.body.style.overflow = \"\";\n      });\n\n      mobileMenuLinks.forEach((link) => {\n        link.addEventListener(\"click\", () => {\n          this.isMobileMenuOpen = false;\n          mobileMenu.classList.remove(\"active\");\n          menuToggle.style.display = \"block\";\n          document.body.style.overflow = \"\";\n        });\n      });\n    }\n  }\n}\n\n// Initialize the app when the DOM is loaded\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  new PortfolioApp();\n});\n"],"names":["$1ccc8d3c866b7484$var$PortfolioApp","constructor","isDarkMode","isMobileMenuOpen","projects","name","description","githubUrl","initializeThemeToggle","initializeSmoothScroll","window","location","pathname","endsWith","loadProjects","initializeIntersectionObserver","initializeMobileMenu","prefersDark","matchMedia","matches","storedTheme","localStorage","getItem","document","documentElement","setAttribute","setItem","toggleTheme","newTheme","currentTheme","getAttribute","querySelector","addEventListener","querySelectorAll","forEach","anchor","e","preventDefault","target","scrollIntoView","behavior","projectsGrid","project","projectCard","createProjectCard","appendChild","card","createElement","className","innerHTML","observer","IntersectionObserver","entries","entry","isIntersecting","classList","add","threshold","section","observe","mobileMenu","menuToggle","closeMenu","mobileMenuLinks","style","display","body","overflow","remove","link"],"version":3,"file":"SCSS_Resume.34debfd7.js.map"}